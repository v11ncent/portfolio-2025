@use "../mixins" as mixins;
@use "../queries" as queries;

aside {
  --_padding-block: 24px;
  --_padding-inline: 16px;
  --_padding: 24px 16px;
  --_border: 1px solid var(--color-grey-200);
  --_hover-background-color: var(--color-grey-100);
  --_active-background-color: var(--color-blue);
  --_active-color: var(--color-black);
}

#figma-bar--full,
#figma-bar--slim {
  .froggy-icon svg {
    min-width: 22px;
    filter: drop-shadow(0px 5px 10px rgba(0, 0, 0, 15%));
  }

  .sidebar-icon svg {
    min-width: 16px;
  }

  .title {
    font-size: 1em;
    white-space: nowrap;
  }

  &.hide {
    transform: translateX(-100%);
  }
}

// Translate the side panel collapse with grid-columns!! :)
body:has(#figma-bar--full.hide) {
  grid-template-columns: 0 auto;
}

#figma-bar--full {
  position: fixed;
  inset: 0 auto 0 0;
  min-width: var(--_bar-width);
  height: 100%;
  border-right: var(--_border);
  background-color: white;
  z-index: 99;

  @media (min-width: queries.$mq-xl) {
    position: sticky;
  }

  // Add transition class after page load, so
  // it doesn't play immediately
  &.transition-added {
    transition: var(--transition-default);
  }

  & > div {
    position: sticky;
    top: 0;
    bottom: 0;
  }

  header {
    padding-block: var(--_padding-block);
    padding-inline: var(--_padding-inline);
    border-bottom: var(--_border);
  }

  header > div {
    display: flex;
    justify-content: space-between;
  }

  .title {
    margin-top: var(--_padding-block);
  }

  .layers {
    padding: var(--_padding-block) var(--_padding-inline);
  }

  #layers-title {
    margin-bottom: calc(var(--_padding-block) / 2);
    font-size: 1em;
    white-space: nowrap;
  }

  .list-heading {
    margin-bottom: calc(var(--_padding-block) / 6);
    color: var(--_color-active);
    white-space: nowrap;
  }

  li {
    position: relative;
    padding: 2px;

    &:not(.list-heading) {
      margin-bottom: calc(var(--_padding-block) / 6);
      color: var(--color-text-light);
    }

    &::before {
      content: "";
      position: absolute;
      inset: 0;
      z-index: -1;
      border-radius: 4px;
    }

    &:hover::before {
      background-color: var(--_hover-background-color);
    }

    &[data-active] {
      color: var(--_color-active);
    }

    &[data-active]::before {
      background-color: var(--_active-background-color);
    }
  }

  li a {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-left: 4px;
    white-space: nowrap;
  }

  li a svg {
    min-width: 14px;
  }

  .padding-left {
    padding-left: var(--_padding-inline);
  }
}

#figma-bar--full.hide + #figma-bar--slim {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 32px;
}

#figma-bar--slim {
  display: none;
  position: fixed;
  top: var(--_padding-inline);
  left: var(--_padding-inline);
  right: var(--_padding-inline);
  z-index: 9;
  padding: 12px 24px;
  border-radius: 16px;
  background-color: white;
  box-shadow: var(--bs-default);
  border: 1px solid var(--color-grey-100);
  transition: var(--transition-default);

  @media (max-width: calc(queries.$mq-lg - 1px)) {
    flex-direction: row-reverse;
    margin-inline: auto;
    max-width: 500px;
  }

  @media (min-width: queries.$mq-lg) {
    left: var(--_padding-inline);
    transform: translateX(0);
    max-width: fit-content;
  }
}

.sidebar-button {
  @include mixins.button-reset;
  cursor: pointer;
  color: var(--color-black);

  &:hover {
    color: var(--color-black-800);
  }

  svg {
    pointer-events: none;
  }
}
